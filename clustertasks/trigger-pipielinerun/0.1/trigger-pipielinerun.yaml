apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  annotations:
    tekton.dev/categories: Artifact Upload
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: artifact-upload,artifactory,jfrog
    tekton.dev/platforms: "linux/amd64"
  labels:
    app.kubernetes.io/version: "0.1"
    operator.tekton.dev/provider-type: community
  name: trigger-pipelinerun
spec:
  description: >-
    trigger-pipelinerun task triggers another PipelineRun

  params:
    - description: The name of the EventListener to trigger
      name: EVENTLISTENER_NAME
      type: string

    - name: EVENTLISTENER_NAMESPACE
      type: string
      default: "tekton-pipelines"
      description: The namespace of the EventListener to trigger

    - name: EVENTLISTENER_ENDPOINT
      type: string
      default: "service"
      description: The endpoint type of the EventListener to trigger, service or route

    - name: TASK_IMAGE
      type: string
      default: "image-registry.openshift-image-registry.svc:5000/openshift/cli:latest"
      description: The location of the task image to use.

    - default: 'true'
      description: Log the commands that are executed during `git-clone`'s operation.
      name: verbose
      type: string

  workspaces:
    - description: The path to shared result output files
      name: results
      mountPath: /tekton/results

  steps:
    - image: $(params.TASK_IMAGE)
      name: trigger-pipelinerun
      resources: {}
      env:
        - name: PARAM_VERBOSE
          value: $(params.verbose)

        - name: PARAM_EVENTLISTENER_NAME
          value: $(params.EVENTLISTENER_NAME)

        - name: PARAM_EVENTLISTENER_NAMESPACE
          value: $(params.EVENTLISTENER_NAMESPACE)

        - name: PARAM_EVENTLISTENER_ENDPOINT
          value: $(params.EVENTLISTENER_ENDPOINT)

      script: |
        #!/usr/bin/env sh

        set -eu

        if [ "${PARAM_VERBOSE}" = "true" ] ; then
          set -x
        fi

        oc project $PARAM_EVENTLISTENER_NAMESPACE

        # cURL the EventListener with the intended payload
        if [ "${PARAM_EVENTLISTENER_ENDPOINT}" = "service" ] ; then
          EE_SVC_URL=$(oc get eventlistener $PARAM_EVENTLISTENER_NAME -o jsonpath='{.status.address.url}')
          curl -X POST -H "Content-Type: application/json" -d '{}' $EE_SVC_URL
        else
          EE_ROUTE_URL=$(oc get routes -l 'eventlistener=${PARAM_EVENTLISTENER_NAME}' -o jsonpath='{.items[0].status.ingress[0].host}')
          curl -X POST -H "Content-Type: application/json" -d '{}' $EE_ROUTE_URL
        fi
